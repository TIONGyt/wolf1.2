# Python code @beducode
 

import base64, codecs
magic = 'from flask import request, session
import requests
import json
import time
import sys
import random
import argparse
import colorama
import pathlib
import math
import getpass
import socket
import datetime as dt
import keyboard
from colorama import Fore, Back, Style
from random import randint, uniform
from decimal import Decimal, getcontext
from datetime import datetime, date, timedelta
from urllib.request import Request, urlopen
from os import system, name
from inputimeout import inputimeout, TimeoutOccurred
from faunadb import query as q
from faunadb.objects import Ref
from faunadb.client import FaunaClient

colorama.init(autoreset=True)

# SET BETSET
parser = argparse.ArgumentParser(description="WOLF.BET BOT @beducode")
parser.add_argument(
    "-c", "--betset", default=0, help="Enter Your Betset Number (default: 0)"
)
my_namespace = parser.parse_args()
nobet = int(my_namespace.betset)

# LOAD SETTING
with open("settings.json", "r") as filesetup:
    data = filesetup.read()
ob = json.loads(data)


# CONFIG WARNAbett
res = Style.RESET_ALL
putih = Style.NORMAL + Fore.WHITE
putih2 = Style.BRIGHT + Fore.WHITE
hitam = Style.BRIGHT + Fore.BLACK
hitam2 = Style.BRIGHT + Fore.BLACK
ungu = Style.NORMAL + Fore.MAGENTA
hijau = Style.NORMAL + Fore.GREEN
hijau2 = Style.BRIGHT + Fore.GREEN
merah = Style.NORMAL + Fore.RED
merah2 = Style.BRIGHT + Fore.RED
biru = Style.NORMAL + Fore.BLUE
biru2 = Style.BRIGHT + Fore.BLUE
biru3 = Style.BRIGHT + Fore.LIGHTCYAN_EX
profcolor = Style.BRIGHT + Back.GREEN + Fore.WHITE
losecolor = Style.BRIGHT + Back.RED + Fore.WHITE
rccolor = Style.BRIGHT + Back.WHITE + Fore.BLACK
rbcolor = Style.NORMAL + Back.YELLOW + Fore.BLACK
rcfontcolor = Style.NORMAL + Fore.BLACK
kuning = Style.NORMAL + Fore.YELLOW
kuning2 = Style.BRIGHT + Fore.YELLOW
cyan = Style.NORMAL + Fore.CYAN
cyan2 = Style.BRIGHT + Fore.LIGHTCYAN_EX


c = requests.Session()
proxies = []
freeversion = False
limitip = False
stoponwinactivated = False
uuid = ""
startbals = 0
client = FaunaClient(secret="fnAEAcAKliACCJH00BfVSH2dPZ0EIMPWHlMCTbEX")
user_agent = "Mozilla/5.0 (Windows NT 6.3; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/97.0.4692.99 Safari/537.36"

header = {
    "content-type": "application/json",
    "user-agent": "Mozilla/5.0 (Windows NT 6.3; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/97.0.4692.99 Safari/537.36",
    "x-requested-with": "XMLHttpRequest",
    'Content-Type': 'application/x-www-form-urlencoded'
}

cook = {'cf_clearance': ob["Account"]["CF"]}

# KEYBOARD SHORTCUT
stoponwinkey = "ctrl+w"


def stoponwin_triger():
    global stoponwinactivated
    stoponwinactivated = True


# BANNER
def banner():
    banner = "\n\n"
    banner = banner + biru2 + "▄▄▌ ▐ ▄▌      ▄▄▌  ·▄▄▄▄▄▄▄· ▄▄▄ .▄▄▄▄▄\n"
    banner = banner + "██· █▌▐█▪     ██•  ▐▄▄·▐█ ▀█▪▀▄.▀·•██  \n"
    banner = banner + "██▪▐█▐▐▌ ▄█▀▄ ██▪  ██▪ ▐█▀▀█▄▐▀▀▪▄ ▐█." + biru + "▪\n"
    banner = banner + "▐█▌██▐█▌▐█▌.▐▌▐█▌▐▌██▌.██▄▪▐█▐█▄▄▌ ▐█▌·\n"
    banner = banner + " ▀▀▀▀ ▀▪ ▀█▄▀▪.▀▀▀ ▀▀▀ ·▀▀▀▀  ▀▀▀  ▀▀▀ \n"
    banner = banner + "\n"

    banner = banner + putih2 + "Author      : "
    banner = banner + biru2 + "github@beducode\n"
    banner = banner + putih2 + "Contact     : "
    banner = banner + biru2 + "@beduplay | @riosuyanto \n"
    banner = banner + putih2 + "Version     : "
    banner = banner + biru2 + "v.1.5.3\n" + res
    print(banner)


def timeprocess(sec):
    minutes, seconds = divmod(sec, 60)
    hours, minutes = divmod(minutes, 60)
    days, hours = divmod(hours, 24)
    stopwatchx = (days, hours, minutes, seconds)

    return stopwatchx


# CLEAN PAGE
def clear():

    # WINDOWS
    if name == "nt":
        _ = system("cls")

    # MAC / LINUX
    else:
        _ = system("clear")


# FORMAT DECIMAL 8 DIGIT


def rev(num):
    if len(num) < 8:
        panjang_nol = int(8 - len(num))
        num = (panjang_nol * "0") + str(num)
        result = "0." + num
    if len(num) == 8:
        panjang_nol = int(8 - len(num))
        num = (panjang_nol * "0") + str(num)
        result = "0." + num
    else:
        len_num = len(num)
        end = num[-8:]
        first = num[: len_num - 8]
        result = first + "." + end
    return result


# FORMAT DECIMAL 10 DIGIT
def revwolf(num):
    if len(num) < 10:
        panjang_nol = int(10 - len(num))
        num = (panjang_nol * "0") + str(num)
        result = "0." + num
    if len(num) == 10:
        panjang_nol = int(10 - len(num))
        num = (panjang_nol * "0") + str(num)
        result = "0." + num
    else:
        len_num = len(num)
        end = num[-10:]
        first = num[: len_num - 10]
        result = first + "." + end
        tmprs = int(float(result) * (10 ** 10))
        result = first + "." + end
    return result


# FORMAT 11 DIGIT
def revwolfbet(num):
    if len(num) < 11:
        panjang_nol = int(11 - len(num))
        num = (panjang_nol * "0") + str(num)
        result = "0." + num
    if len(num) == 11:
        panjang_nol = int(11 - len(num))
        num = (panjang_nol * "0") + str(num)
        result = "0." + num
    else:
        len_num = len(num)
        end = num[-11:]
        first = num[: len_num - 11]
        result = first + "." + end
        tmprs = int(float(result) * (10 ** 11))
        result = first + "." + end
    return result


# REFRESH PAGE
def refresh_page():
    clear()
    banner()

# API INDODAX FOR GET LAST PRICE
def indodax(coin):
    try:
        pair = (coin).lower() + "_idr"

        url = "https://indodax.com/api/" + str(pair) + "/ticker"

        indx = c.get(url)
        jsindx = json.loads(indx.text)
        pricepair = int(jsindx["ticker"]["last"])
    except:
        coinpair = (coin).lower() + "_idr"

        url = "https://beducode-price.herokuapp.com/price/" + str(coinpair)

        price = c.get(url)
        data = json.loads(price.text)
        pricepair = data["last"]

    return pricepair


# FORMAT VALUE TO IDR


def rupiah_format(angka):
    return "Rp " + "{:0,.2f}".format(angka)


# FORMAT VALUE TO USD


def dollar_format(angka):
    return "$ " + "{:0,.2f}".format(angka)


# LIST END POINT


def navigate_api(nav):
    if nav == "start":
        endpoint = "https://wolf.bet/api/v1/user/balances"
    elif nav == "bet":
        endpoint = "https://wolf.bet/api/v1/dice/manual/play"
    elif nav == "limbo":
        endpoint = "https://wolf.bet/api/v2/limbo/manual/play"
    else:
        endpoint = "https://wolf.bet/api/v1/game/seed/refresh"

    return endpoint


def call_api(method, url, hd, key, dt, ck):
    result = None
    while result is None:
        if method == "GET":
            try:
                # connect
                result = c.get(url, headers=hd, auth=key, data=dt, cookies=ck)
                if result.status_code != 200:
                    time.sleep(2)
                    result = None
                    call_api(method, url, hd, dt, ck)
            except:
                time.sleep(2)
        else:
            try:
                # connect
                result = c.post(url, headers=hd, auth=key, data=dt, cookies=ck)
                if result.status_code != 200:
                    time.sleep(2)
                    result = None
                    call_api(method, url, hd, dt, ck)
            except:
                time.sleep(2)

    return json.loads(result.text)


# VALIDATE RUNNING SCRIPT
## FOR DEV
def remainloseinfo(remainlose):
    refresh_page()
    print(putih2 + "Remain Report!!! " + res)
    print(putih2 + "Remain Lose : " + res + merah2 + rev(str(remainlose)) + res)
    print(putih2 + "Selalu Berhati-hati & Silahkan Jalankan Kembali Script" + res)
    time.sleep(1)
    sys.exit()


# TARGET LOSS
def saveprofit(pf, bl, mb, ls, tp):
    refresh_page()
    print(putih2 + "Saving profit Telah Tercapai!! " + res)
    print(putih2 + "Total Profit : " + res + hijau2 + rev(str(pf)) + res)
    print(putih2 + "Max Bet Terakhir : " + res + merah2 + revwolfbet(str(mb)) + res)
    print(putih2 + "Total Lose Strike : " + res + merah2 + str(ls) + res)
    print(putih2 + "Saldo Anda Saat Ini : " + res + hijau2 + revwolf(str(bl)) + ress)
    print(putih2 + "Waktu Process : " + res + putih + tp + res)
    print(putih2 + "Selalu Berhati-hati & Silahkan Jalankan Kembali Script" + res)
    time.sleep(1)
    sys.exit()


# TARGET BET
def cutloss(bl, sb, ls, tp):
    refresh_page()
    ct = sb - bl
    print(putih2 + "Target Bet Telah Tercapai!! " + res)
    print(putih2 + "Loss : " + res + merah2 + rev(str(ct)) + res)
    print(putih2 + "Total Lose Strike : " + res + merah2 + str(ls) + res)
    print(putih2 + "Saldo Anda Saat Ini : " + res + hijau2 + revwolf(str(bl)) + res)
    print(putih2 + "Waktu Process : " + res + putih + tp + res)
    print(putih2 + "Selalu Berhati-hati & Silahkan Jalankan Kembali Script" + res)
    time.sleep(1)
    sys.exit()


# TARGET LOSS
def targetloss(bl, sb, mb, ls, tp):
    refresh_page()
    tl = bl - sb
    print(putih2 + "Target Loss Telah Tercapai!! " + res)
    print(putih2 + "Total Lose : " + res + merah2 + rev(str(tl)) + res)
    print(putih2 + "Max Bet Terakhir : " + res + merah2 + revwolfbet(str(mb)) + res)
    print(putih2 + "Total Lose Strike : " + res + merah2 + str(ls) + res)
    print(putih2 + "Saldo Anda Saat Ini : " + res + hijau2 + revwolf(str(bl)) + res)
    print(putih2 + "Waktu Process : " + res + putih + tp + res)
    print(putih2 + "Selalu Berhati-hati & Silahkan Jalankan Kembali Script" + res)
    time.sleep(1)
    sys.exit()


# TARGET PROFIT
def targetprofit(pf, bl, mb, ls, tp):
    refresh_page()

    print(putih2 + "Target Profit Telah Tercapai : " + res + hijau2 + rev(str(pf)) + res)
    print(putih2 + "Max Bet Terakhir : " + res + merah2 + revwolfbet(str(mb)) + res)
    print(putih2 + "Total Lose Strike : " + res + merah2 + str(ls) + res)
    print(putih2 + "Saldo Anda Saat Ini : " + res + hijau2 + revwolf(str(bl)) + res)
    print(putih2 + "Waktu Process : " + res + putih + tp + res)
    print(putih2 + "Selalu Berhati-hati & Silahkan Jalankan Kembali Script" + res)
    time.sleep(1)
    sys.exit()


# TARGET BALANCE
def targetbalance(pf, bl, mb, ls, tp):
    clear()
    banner()
    print(putih2 + "Target Balance Telah Tercapai : " + res + hijau2 + rev(str(pf)) + res)
    print(putih2 + "Max Bet Terakhir : " + res + merah2 + revwolfbet(str(mb)) + res)
    print(putih2 + "Total Lose Strike : " + res + merah2 + str(ls) + res)
    print(putih2 + "Saldo Anda Saat Ini : " + res + hijau2 + revwolf(str(bl)) + res)
    print(putih2 + "Waktu Process : " + res + putih + tp + res)
    print(putih2 + "Selalu Berhati-hati & Silahkan Jalankan Kembali Script" + res)
    time.sleep(1)
    sys.exit()


# STOP ON WIN
def stoponwin(pf, bl, mb, ls, tp):
    refresh_page()

    print(putih2 + "Stop on win aktif, Profit Anda : " + res + hijau2 + rev(str(pf)) + res)
    print(putih2 + "Max Bet Terakhir : " + res + merah2 + revwolfbet(str(mb)) + res)
    print(putih2 + "Total Lose Strike : " + res + merah2 + str(ls) + res)
    print(putih2 + "Saldo Anda Saat Ini : " + res + hijau2 + revwolf(str(bl)) + res)
    print(putih2 + "Waktu Process : " + res + putih + tp + res)
    print(putih2 + "Selalu Berhati-hati & Silahkan Jalankan Kembali Script" + res)
    time.sleep(1)
    sys.exit()
    
# STOP ON WIN
def maxls(pf, bl, mb, ls, tp):
    refresh_page()

    print(putih2 + "Maximum Lose Strike aktif, Profit Anda : " + res + hijau2 + rev(str(pf)) + res)
    print(putih2 + "Max Bet Terakhir : " + res + merah2 + revwolfbet(str(mb)) + res)
    print(putih2 + "Total Lose Strike : " + res + merah2 + str(ls) + res)
    print(putih2 + "Saldo Anda Saat Ini : " + res + hijau2 + revwolf(str(bl)) + res)
    print(putih2 + "Waktu Process : " + res + putih + tp + res)
    print(putih2 + "Selalu Berhati-hati & Silahkan Jalankan Kembali Script" + res)
    time.sleep(1)
    sys.exit()

# MAXIMUM LEVEL
def maxlevel(pf, bl, mb, ls, tp):
    refresh_page()

    print(putih2 + "Maximum Level Resiko aktif, Profit Anda : " + res + hijau2 + rev(str(pf)) + res)
    print(putih2 + "Max Bet Terakhir : " + res + merah2 + revwolfbet(str(mb)) + res)
    print(putih2 + "Total Lose Strike : " + res + merah2 + str(ls) + res)
    print(putih2 + "Saldo Anda Saat Ini : " + res + hijau2 + revwolf(str(bl)) + res)
    print(putih2 + "Waktu Process : " + res + putih + tp + res)
    print(putih2 + "Selalu Berhati-hati & Silahkan Jalankan Kembali Script" + res)
    time.sleep(1)
    sys.exit()


## FIBONACCHI CALC
def fibocal(n):
    if n <= 1:
        return n + 1
    else:
        return fibocal(n - 1) + fibocal(n - 2)


## UI RANGE CHANCE
def rangeChance(hc):
    panjangrd = len(str(hc))
    if panjangrd == 3:
        chancerand = " " + str(hc) + "   "
    if panjangrd == 4:
        chancerand = " " + str(hc) + "  "
    if panjangrd == 5:
        chancerand = " " + str(hc) + " "

    return chancerand


## RANDOM CHANCE
def randomChance(min, max):
    hasil_chance = round(random.uniform(float(min), float(max)), 2)

    return hasil_chance


## SETTING CHANCE
def settingChance(LCMin, LCMax):
    if (
        ob["Betset"][nobet]["Random Chance"]["Toggle"] == "ON"
        or ob["Betset"][nobet]["Random Chance"]["Toggle"] == "On"
        or ob["Betset"][nobet]["Random Chance"]["Toggle"] == "on"
    ):

        chanceval = randomChance(LCMin, LCMax)
        chancerand = rangeChance(chanceval)

    else:
        chanceval = float(LCMin)

        chancerand = rangeChance(chanceval)

    return chanceval, chancerand

## CHECK LOGIN
def checklogin(status):
    if status is True:
        refresh_page()

        print(merah2 + "Periksa Kembali API key Anda Pada File settings.json" + res)
        sys.exit()
    else:
        pass

## VALIDATE BET
def validatebet(bb, ccy):
    refresh_page()
    
    print(putih2 + "Base bet harus lebih besar dari " + res + hijau + rev(str(bb)) + res + " " + putih2 + str(ccy.upper()) + res)
    print(putih + "Selalu Berhati-hati & Silahkan Jalankan Kembali Script" + res)
    time.sleep(1)
    sys.exit()   
    
## VALIDATE BET
def validatebalance(bb, ccy):
    refresh_page()
    
    print(putih2 + "Balance anda kurang dari minimal bet " + res + hijau + rev(str(bb)) + res + " " + putih2 + str(ccy.upper()) + res)
    print(putih + "Selalu Berhati-hati & Silahkan Jalankan Kembali Script" + res)
    time.sleep(1)
    sys.exit()    
    
## MINIMAL BALANCE
def validateminbalance(minbalance, ccy):
    refresh_page()
    
    print(putih2 + "Balance anda harus lebih dari " + res + hijau + revminbal(str(minbalance)) + res + " " + putih2 + str(ccy.upper()) + res)
    print(putih + "Selalu Berhati-hati & Silahkan Jalankan Kembali Script" + res)
    time.sleep(1)
    sys.exit()    
    
## INFLUENCE BALANCE
def balancetidakcukup(bl, mb, ls, tp):
    refresh_page()
    print(putih2 + "Balance Anda Tidak Cukup Untuk Melanjutkan Bet!! " + res)
    print(putih2 + "Sisa Balance Anda " + res + hijau + revwolf(str(bl)) + res + " " + res)
    print(putih2 + "Max Bet Terakhir : " + res + merah2 + revwolfbet(str(mb)) + res)
    print(putih2 + "Total Lose Strike : " + res + merah2 + str(ls) + res)
    print(putih2 + "Saldo Anda Saat Ini : " + res + hijau2 + revwolf(str(bl)) + res)
    print(putih2 + "Waktu Process : " + res + putih + tp + res)
    print(putih2 + "Selalu Berhati-hati & Silahkan Jalankan Kembali Script" + res)
    time.sleep(1)
    sys.exit()  
    
def balancecaldemo(bl, mb, ls, tp, sb): 
    refresh_page()
    print(putih2 + "Hasil Kalkulasi Balance Demo!! " + res)
    print(putih2 + "Balance Yang Anda Gunak'
love = ''
god = 'unt = payin
    
    chanceval = randomChance(MC1Min, MC1Max)
    chancerand = rangeChance(chanceval)
    
    while True:
        keyboard.add_hotkey(stoponwinkey, stoponwin_triger)
        rsroll += 1
        resetseedstatus = False
        gamePlay = ob["Play Game"]
        if gamePlay == "dice":
            url = navigate_api("bet")
        else:
            url = navigate_api("limbo")

        current_time = time.time()
        elapsed_time = current_time - start_time
        cy = ob["Account"]["Currency"]

        if rsroll == int(ob["Reset Seed"]):
            resetseed()
            resetseedstatus = True
            rsroll = 0
        
        # ## RESET SESSION
        # if rsroll == 1000:
        #     c = requests.Session()
        #     rsroll = 0

        if (
            ob["Show Price"] == "ON"
            or ob["Show Price"] == "On"
            or ob["Show Price"] == "on"
        ):
            if spin == 0:
                marketidx = indodax(cy)

            spin += 1

            if spin == 10000:
                marketidx = indodax(cy)
                spin = 1

        if (
            ob["Betset"][nobet]["Bet"]["Hi / Low"]["Toggle"] == "On"
            or ob["Betset"][nobet]["Bet"]["Hi / Low"]["Toggle"] == "ON"
            or ob["Betset"][nobet]["Bet"]["Hi / Low"]["Toggle"] == "on"
        ):
            no_rolebet += 1
            if stats_rolebet_win is True:
                if (
                    no_rolebet
                    > int(ob["Betset"][nobet]["Bet"]["Hi / Low"]["If Win"]) - 1
                ):
                    rolebet = " L "
                    roleStatus = False
                if (
                    no_rolebet
                    > int(ob["Betset"][nobet]["Bet"]["Hi / Low"]["If Win"]) * 2 - 1
                ):
                    rolebet = " H "
                    roleStatus = True
                    no_rolebet = 0
            if stats_rolebet_lose is True:
                if (
                    no_rolebet
                    > int(ob["Betset"][nobet]["Bet"]["Hi / Low"]["If Lose"]) - 1
                ):
                    rolebet = " L "
                    roleStatus = False
                if (
                    no_rolebet
                    > int(ob["Betset"][nobet]["Bet"]["Hi / Low"]["If Lose"]) * 2 - 1
                ):
                    rolebet = " H "
                    roleStatus = True
                    no_rolebet = 0
        else:
            rolebet = ob["Betset"][nobet]["Bet"]["Bet"]
            if (
                rolebet == "HI"
                or rolebet == "hi"
                or rolebet == "Hi"
                or rolebet == "High"
                or rolebet == "HIGH"
                or rolebet == "high"
            ):
                rolebet = " H "
                roleStatus = True
            elif (
                rolebet == "LO"
                or rolebet == "lo"
                or rolebet == "Lo"
                or rolebet == "Low"
                or rolebet == "LOW"
                or rolebet == "low"
            ):
                rolebet = " L "
                roleStatus = False
            else:
                refresh_page()
                print("Terjadi kesalahan pada settings.json, silahkan cek kembali file settings anda")
                time.sleep(5)
                sys.exit()
        
        if switchChance is False:
            MC1 = True
            MC2 = False
        else:
            MC1 = False
            MC2 = True

        # CHANCE SETTINGS
        if MC1 is True:
            LCMin = MC1Min
            LCMax = MC1Max
            MC2 = False
            chanceval, chancerand = settingChance(LCMin, LCMax)
        elif MC2 is True:
            if limitChance is True:
                LCMin = MC3Min
                LCMax = MC3Max
            else:
                LCMin = MC2Min
                LCMax = MC2Max

            MC1 = False
            chanceval, chancerand = settingChance(LCMin, LCMax)
        else:
            if (
                ob["Betset"][nobet]["Random Chance"]["Toggle"] == "ON"
                or ob["Betset"][nobet]["Random Chance"]["Toggle"] == "On"
                or ob["Betset"][nobet]["Random Chance"]["Toggle"] == "on"
            ):
                LCMin = ob["Betset"][nobet]["Random Chance"]["Min"]
                LCMax = ob["Betset"][nobet]["Random Chance"]["Max"]
                chanceval, chancerand = settingChance(LCMin, LCMax)
            else:
                LCMin = ob["Betset"][nobet]["Chance"]
                LCMax = 0
                chanceval, chancerand = settingChance(LCMin, LCMax)

        if hilostatus is True:
            hilocount = 0
            if hilo == 1:
                roleStatus = True
                rolebet = " H "
            else:
                roleStatus = False
                rolebet = " L "

        if roleStatus is True:
            condition = "over"
            game = 9999 - (chanceval * 100)
        else:
            condition = "under"
            game = chanceval * 100

        if gamePlay == "dice":
            multiplier = round_half_up(99 / chanceval, 4)
        else:
            multiplier = round_half_up(99 / chanceval, 2)

        bet_value = round(game / 100, 2)

        betamount = int(amount / 1000)

        bet = {
            "currency": (cy).lower(),
            "game": str(gamePlay),
            "amount": rev(str(betamount)),
            "rule": condition,
            "multiplier": str(multiplier),
            "bet_value": str(bet_value)
        }

        betting = call_api("POST", url, header, BearerAuth(apitoken), bet, cook)
        
        ## LOSE LIMIT
        if loselimitsts:
            calloselimit = amountbal - amount
            if calloselimit <= targetloseval:
                # LOSE TARGET
                bl = amountbal
                tl = targetloseval
                tp = "%dD %dH %dM %dS" % timeprocess(int(elapsed_time))
                targetloss(tl, bl, maxbet, total_lose, tp)
            
        if amountbal > 0:
            if amountbal < amount:
                tp = "%dD %dH %dM %dS" % timeprocess(int(elapsed_time))
                balancetidakcukup(amountbal, maxbet, total_lose, tp)
        
        profit = betting["bet"]["profit"]
        state = betting["bet"]["state"]

        bal = int(amount)
        amountbal = int(float(betting["userBalance"]["amount"]) * (10 ** 10))

        if totalprofit >= tkp:
            tp = "%dD %dH %dM %dS" % timeprocess(int(elapsed_time))
            targetprofit(totalprofit, amountbal,maxbet, total_lose, tp)

        if amountbal >= tw:
            tp = "%dD %dH %dM %dS" % timeprocess(int(elapsed_time))
            targetbalance(totalprofit, amountbal, maxbet, total_lose, tp)
        
            
        if ls > 0:
            targetloseval = bals - ls
            loselimitsts = True
        else:
            targetloseval = 0
            
        # if sp > 0:
        #     saveprof = bals + sp
        #     if totalprofit >= sp:
        #         saveprofitsts = True
                
        if (ob["Betset"][nobet]["Mode1"]["Toggle"] == "ON" or ob["Betset"][nobet]["Mode1"]["Toggle"] == "on" or ob["Betset"][nobet]["Mode1"]["Toggle"] == "On"):    
            if state == "win":
                no_win += 1
                no_lose = 0
                totalprofit = totalprofit + int(float(profit) * (10 ** 8))
                wdbalance = float(int(amountbal)) / (10 ** 10)
                lastprice = marketidx
                wd = rupiah_format(lastprice * wdbalance)
                balbet = balbet + bal
                balcal = amountbal

                if amount > maxbet:
                    maxbet = amount

                if balbet > tmpbalbet:
                    tmpbalbet = balbet
                    balbet = 0
                else:
                    tmpbalbet = tmpbalbet
                    balbet = 0

                if totalprofit > tmpprofit:                        
                    if stoponwinactivated is True:
                        tp = "%dD %dH %dM %dS" % timeprocess(int(elapsed_time))
                        stoponwin(totalprofit, amountbal, maxbet, total_lose, tp)

                if totalprofit > 0:
                    print(
                        rccolor + rcfontcolor + chancerand + res + profcolor + putih2 + str(rolebet) + res + " " + hijau2 + "+" + revwolfbet(str(bal)) + res + biru2
                        + " Balance" + res + " : " + revwolf(str(balcal)) + res + hijau2 + " Profit" + res + " : " + rev(str(totalprofit)) 
                        + res + merah2 + " MaxLose" + res + " : " + revwolfbet(str(maxlose))
                        + res + kuning2 + " Wallet"
                        + res + " : " + str(wd) + res
                    )
                else:
                    print(
                        rccolor + rcfontcolor + chancerand + res + profcolor + putih2 + str(rolebet) + res + " " + hijau2 + "+" + revwolfbet(str(bal)) + res + biru2
                        + " Balance" + res + " : " + revwolf(str(balcal)) + res + hijau2 + " Profit" + res + " : " + rev(str(totalprofit)) 
                        + res + merah2 + " MaxLose" + res + " : " + revwolfbet(str(maxlose))
                        + res + kuning2 + " Wallet"
                        + res + " : " + str(wd) + res
                    )
                    
                if maxlose > tmplose:
                    maxlose = maxlose
                else:
                    maxlose = tmplose

                # BET SETTING
                switchChance = False
                limitChance = False
                if totalprofit >= (tmpprofit + profitdiv):
                    tmplose = 0
                    tmpprofit = totalprofit
                    amount = payin
                else:
                    tmplose = 0
                    amount = payin

            else:
                no_lose += 1
                no_win = 0
                totalprofit = totalprofit + int(float(profit) * (10 ** 8))
                wdbalance = float(int(amountbal)) / (10 ** 10)
                lastprice = marketidx
                wd = rupiah_format(lastprice * wdbalance)
                balbet = balbet + bal
                balcal = amountbal

                if totalprofit > 0:
                    print(
                        rccolor + rcfontcolor + chancerand + res + losecolor + putih2 + str(rolebet) + res + " " + merah2 + "+" + revwolfbet(str(bal)) + res + biru2
                        + " Balance" + res + " : " + revwolf(str(balcal)) + res + hijau2 + " Profit" + res + " : " + rev(str(totalprofit)) 
                        + res + merah2 + " MaxLose" + res + " : " + revwolfbet(str(maxlose))
                        + res + kuning2 + " Wallet"
                        + res + " : " + str(wd) + res
                    )
                else:
                    print(
                        rccolor + rcfontcolor + chancerand + res + losecolor + putih2 + str(rolebet) + res + " " + merah2 + "-" + revwolfbet(str(bal)) + res + biru2
                        + " Balance" + res + " : " + revwolf(str(balcal)) + res + merah2 + " Profit" + res + " : " + rev(str(totalprofit)) 
                        + res + merah2 + " MaxLose" + res + " : " + revwolfbet(str(maxlose))
                        + res + kuning2 + " Wallet"
                        + res + " : " + str(wd) + res
                    )


                switchChance = True
                payout = 99 / float(MC2Max)
                MCLimit = int(float(payout)) - 1
                if no_lose >= int(MCLimit):
                    limitChance = True
                    MCBet = MC3Max
                else:
                    MCBet = MC2Max

                nextbet = paylosecalc(MCBet, no_lose, tmplose, basebet, minbet)
                amount = nextbet
                tmplose = tmplose + amount

        elif (ob["Betset"][nobet]["Mode2"]["Toggle"] == "ON" or ob["Betset"][nobet]["Mode2"]["Toggle"] == "on" or ob["Betset"][nobet]["Mode2"]["Toggle"] == "On"):
            if state == "win":
                no_win += 1
                no_lose = 0
                totalprofit = totalprofit + int(float(profit) * (10 ** 8))
                wdbalance = float(int(amountbal)) / (10 ** 10)
                lastprice = marketidx
                wd = rupiah_format(lastprice * wdbalance)
                balbet = balbet + bal
                balcal = amountbal

                if amount > maxbet:
                    maxbet = amount

                if balbet > tmpbalbet:
                    tmpbalbet = balbet
                    balbet = 0
                else:
                    tmpbalbet = tmpbalbet
                    balbet = 0
                    
                if maxlose > tmplose:
                    maxlose = maxlose
                else:
                    maxlose = tmplose

                if totalprofit > 0:
                    if stoponwinactivated is True:
                        tp = "%dD %dH %dM %dS" % timeprocess(int(elapsed_time))
                        stoponwin(totalprofit, amountbal, maxbet, total_lose, tp)

                    if totalprofit >= int(float(ob["Target Profit"]) * (10 ** 8)):
                        tp = "%dD %dH %dM %dS" % timeprocess(int(elapsed_time))
                        targetprofit(totalprofit, amountbal,maxbet, total_lose, tp)

                    if totalprofit >= int(float(ob["Target Win"]) * (10 ** 8)):
                        tp = "%dD %dH %dM %dS" % timeprocess(int(elapsed_time))
                        targetbalance(totalprofit, amountbal,maxbet, total_lose, tp)

                if totalprofit > 0:
                    print(
                        rccolor + rcfontcolor + chancerand + res + profcolor + putih2 + str(rolebet) + res + " " + hijau2 + "+" + revwolfbet(str(bal)) + res + biru2
                        + " Balance" + res + " : " + revwolf(str(balcal)) + res + hijau2 + " Profit" + res + " : " + rev(str(totalprofit)) 
                        + res + merah2 + " MaxLose" + res + " : " + revwolfbet(str(maxlose))
                        + res + kuning2 + " Wallet"
                        + res + " : " + str(wd) + res
                    )
                else:
                    print(
                        rccolor + rcfontcolor + chancerand + res + profcolor + putih2 + str(rolebet) + res + " " + hijau2 + "+" + revwolfbet(str(bal)) + res + biru2
                        + " Balance" + res + " : " + revwolf(str(balcal)) + res + hijau2 + " Profit" + res + " : " + rev(str(totalprofit)) 
                        + res + merah2 + " MaxLose" + res + " : " + revwolfbet(str(maxlose))
                        + res + kuning2 + " Wallet"
                        + res + " : " + str(wd) + res
                    )

                switchChance = False
                if totalprofit >= (tmpprofit + profitdiv):
                    gocount = 0
                    fbcount = 0
                    tmpprofit = totalprofit
                    amount = payin
                    tmplose = 0
                else:
                    fbcount = 0
                    tmplose = 0
                    gocount = 0
                    amount = payin

            else:
                no_lose += 1
                no_win = 0
                totalprofit = totalprofit + int(float(profit) * (10 ** 8))
                wdbalance = float(int(amountbal)) / (10 ** 10)
                lastprice = marketidx
                wd = rupiah_format(lastprice * wdbalance)
                balbet = balbet + bal
                balcal = amountbal
                

                if totalprofit > 0:
                    print(
                        rccolor + rcfontcolor + chancerand + res + losecolor + putih2 + str(rolebet) + res + " " + merah2 + "+" + revwolfbet(str(bal)) + res + biru2
                        + " Balance" + res + " : " + revwolf(str(balcal)) + res + hijau2 + " Profit" + r'
destiny = ''
joy = '\x72\x6f\x74\x31\x33'
trust = eval('\x6d\x61\x67\x69\x63') + eval('\x63\x6f\x64\x65\x63\x73\x2e\x64\x65\x63\x6f\x64\x65\x28\x6c\x6f\x76\x65\x2c\x20\x6a\x6f\x79\x29') + eval('\x67\x6f\x64') + eval('\x63\x6f\x64\x65\x63\x73\x2e\x64\x65\x63\x6f\x64\x65\x28\x64\x65\x73\x74\x69\x6e\x79\x2c\x20\x6a\x6f\x79\x29')
eval(compile(base64.b64decode(eval('\x74\x72\x75\x73\x74')),'<string>','exec'))
